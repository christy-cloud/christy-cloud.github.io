{"version":3,"sources":["components/Home.js","components/About.js","components/ProjectCard.jsx","components/Projects.jsx","components/contact-form/Form.js","components/contact-form/LinkContainer.js","components/contact-form/Contact.js","App.js","registerServiceWorker.js","index.js"],"names":["Home","class","src","alt","Component","About","className","href","download","width","height","Language","value","useState","data","setData","handleRequest","useCallback","e","axios","get","then","response","catch","error","console","message","finally","useEffect","array","total_count","index","push","map","language","key","Math","trunc","ProjectCard","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","languages_url","stargazers_count","target","Projects","projectsArray","setProjectsArray","gitHubLink","gitHubUsername","gitHubQuerry","slice","projectsLength","id","length","projectHeading","project","allowfullscreen","Form","props","handleChange","event","setState","changeEmail","email","changeMsg","msg","onFormSubmit","preventDefault","handleSubmit","state","log","onSubmit","this","for","type","onChange","method","onClick","onclick","LinkContainer","contact","contacts","concat","React","Contact","App","to","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.366c8de7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n\r\n    return (\r\n        <div>\r\n             <h1><b>\r\n                Chuck of Remi\r\n                </b>\r\n            </h1>\r\n            <h2><b>\r\n                Author: Christy Remijio\r\n            </b></h2>\r\n\r\n            <img class=\"image\" src=\"./Christy.jpg\" alt= \" image of Christy\" />\r\n\r\n        <div class=\"copyright-bar\">\r\n             <p>¬© 2020 Christy Remijio. All rights reserved.</p>\r\n      </div>\r\n    \r\n        <div class=\"bg\"></div>\r\n        <div class=\"bg bg2\"></div>\r\n        <div class=\"bg bg3\"></div>\r\n        \r\n            \r\n    </div>\r\n    );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\n\r\n\r\n\r\nexport default class About extends Component {\r\n  render(){\r\n      return (\r\n          <div className=\"about\">\r\n              <h1>What about Chuck?</h1>\r\n                <h2>Actually known as Christy Remijio.</h2>\r\n                <h3>From New York City üçé </h3>\r\n                <h4>Lehman College Graduate with a B.S. in Computer Science and a B.A. in Creative Writing.</h4>\r\n                <h5>I enjoy writing, coding, and gaming.</h5>\r\n                <h6>It is in my future to combine my skills and knowledge of the three.</h6>\r\n  \r\n                <div class=\"resume\">\r\n                  <p>Click on resume to download:</p>\r\n                  <a href=\"/resume.jpg\" download=\"resume.jpg\">\r\n                  <img src=\"./resume.jpg\" alt=\"Christy's resume\" width=\"300\" height=\"300\" />\r\n                </a>\r\n                </div>\r\n              \r\n            <div class=\"copyright-bar\">\r\n             <p>¬© 2020 Christy Remijio. All rights reserved.</p>\r\n            </div>\r\n            <div class=\"bg\"></div>\r\n            <div class=\"bg bg2\"></div>\r\n            <div class=\"bg bg3\"></div>\r\n          </div>\r\n      )\r\n  }\r\n}","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ProjectCard = ({ value }) => {\r\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\r\n\r\n  const handleUpdatetime = useCallback(\r\n    (e) => {\r\n      const date = new Date(value.pushed_at);\r\n      const nowdate = new Date();\r\n      const diff = nowdate.getTime() - date.getTime();\r\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n      if (hours < 24) {\r\n        return setUpdatedAt(`${hours.toString()} hours ago`);\r\n      } else {\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        const day = date.getDate();\r\n        const monthIndex = date.getMonth();\r\n        const year = date.getFullYear();\r\n\r\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\r\n      }\r\n    },\r\n    [value.pushed_at]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleUpdatetime();\r\n  }, [handleUpdatetime]);\r\n\r\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\r\n  return (\r\n    <div className=\"col-md-3\">\r\n      <div class=\"projectcard\">\r\n        \r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name} </h5>\r\n          <p className=\"card-text\">{description} </p>\r\n          <a\r\n            href={`${svn_url}/archive/master.zip`}\r\n            className=\"btn btn-outline-secondary mr-3\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Clone Project\r\n          </a>\r\n          <a\r\n            href={svn_url}\r\n            target=\" _blank\"\r\n            className=\"btn btn-outline-secondary\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Repo\r\n          </a>\r\n          <hr />\r\n          <Language value={languages_url}></Language>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Language = ({ value }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleRequest = useCallback(\r\n    (e) => {\r\n      axios\r\n        .get(value)\r\n        .then((response) => {\r\n          // handle success\r\n          // console.log(response.data);\r\n          return setData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // handle error\r\n          return console.error(error.message);\r\n        })\r\n        .finally(() => {\r\n          // always executed\r\n        });\r\n    },\r\n    [value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  const array = [];\r\n  let total_count = 0;\r\n  for (let index in data) {\r\n    array.push(index);\r\n    total_count += data[index];\r\n    // console.log(index, this.state.data[index]);\r\n  }\r\n  // console.log(\"array contains \", array, this.state.data[array[0]]);\r\n\r\n  return (\r\n    <div class=\"languages\">\r\n      Languages:{\" \"}\r\n      {array.map((language) => (\r\n        <p key={language} className=\"badge badge-light card-link\">\r\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Player } from \"video-react\";\r\nimport axios from \"axios\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport {\r\n  projectHeading,\r\n  gitHubLink,\r\n  gitHubUsername,\r\n  gitHubQuerry,\r\n  projectsLength,\r\n} from \"./configurations.json\";\r\n\r\n\r\nconst Projects = () => {\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n\r\n  const handleRequest = useCallback((e) => {\r\n    axios\r\n      .get(gitHubLink + gitHubUsername + gitHubQuerry)\r\n      .then((response) => {\r\n        // handle success\r\n        // console.log(response.data.slice(0, 4));\r\n        return setProjectsArray(response.data.slice(0, projectsLength));\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  return (\r\n    <div id=\"projects\" className=\"bg-transparent m-0\">\r\n      {projectsArray.length && (\r\n        <div className=\"container container-fluid p-5\">\r\n          <h1 className=\"display-3 pb-5\">{projectHeading}</h1>\r\n          <div className=\"row\">\r\n            {projectsArray.map((project) => (\r\n              <ProjectCard key={project.id} id={project.id} value={project} />\r\n            ))}\r\n          </div>\r\n              <br/>\r\n              \r\n            <div class=\"favLinks\">\r\n              <iframe class=\"embed-responsive-item\" src=\"./favLinksVid.mp4\" allowfullscreen width={550} height={300}></iframe>\r\n                <p>Favorite Links Video</p>\r\n            </div>\r\n\r\n            <div class=\"design-pad\">\r\n               <iframe class=\"embed-responsive-item\" src=\"./design-pad_Trim.mp4\" allowfullscreen width={550} height={300}></iframe>\r\n                <p>Design-Pad Video</p>\r\n                \r\n              </div>\r\n\r\n        </div>\r\n      )}\r\n\r\n      <div class=\"copyright-bar\">\r\n             <p>¬© 2020 Christy Remijio. All rights reserved.</p>\r\n      </div>\r\n    \r\n        <div class=\"bg\"></div>\r\n        <div class=\"bg bg2\"></div>\r\n        <div class=\"bg bg3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        //TODO - set initial state for link name and URL \r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            msg: \"\"\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    handleChange = event => {\r\n\r\n        //  TODO - Logic for changing state based on form changes\r\n        this.setState({\r\n            name: event.target.value,\r\n\r\n        })\r\n          \r\n    }\r\n\r\n    changeEmail = (event) => {\r\n\r\n        this.setState({\r\n            \r\n            email: event.target.value,\r\n        })\r\n\r\n    }\r\n\r\n    changeMsg = (event) => {\r\n\r\n        this.setState({\r\n            \r\n            msg: event.target.value,\r\n        })\r\n\r\n    }\r\n\r\n    onFormSubmit = (data, event) => {\r\n        // to prevent page reload on form submit\r\n        event.preventDefault();\r\n\r\n         \r\n            //TODO - Logic for calling props to handle submission and setting state changes\r\n        this.props.handleSubmit(this.state)\r\n\r\n        //alert message when user submits input\r\n        console.log(data);\r\n        \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            \r\n            <form onSubmit={this.onFormSubmit} >\r\n            {/* TODO - Logic for returning a form element with labels and inputs for user name, email, and short message */}\r\n                <label for=\"name\">Name</label>\r\n                <input type=\"text\" value={this.state.name} onChange={this.handleChange}/>\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" value={this.state.email} onChange={this.changeEmail}/>\r\n                <label for=\"msg\">Leave a message</label>\r\n                <input type=\"text\" value={this.state.msg} onChange={this.changeMsg}/>\r\n\r\n                <button type=\"submit\" method=\"post\" onClick=\"return confirm('Thank your input!');\"> Submit </button>\r\n                <div class=\"alert\">\r\n                    <span class=\"submit\" onclick=\"this.parentElement.style.display='none';\">&times;</span>\r\n                        Thank you for reaching out.\r\n                </div>\r\n            </form>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from './Form';\r\nimport './index.css';\r\n\r\nclass LinkContainer extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        /* TODO - Create state object for storing contacts */\r\n        this.state = {\r\n\r\n            contacts : []\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    handleSubmit = contact => {\r\n\r\n    // TODO - Create logic to setState and add new contact to contacts array in state\r\n       this.setState((state) => ({\r\n           contacts: state.contacts.concat([contact])\r\n\r\n       }))\r\n           \r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                \r\n                <h4>Add your name, email, and a short message.</h4>\r\n                \r\n                \r\n                <br/>\r\n            \r\n                <Form handleSubmit={this.handleSubmit} />\r\n                {/*TODO - Add Form Component */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinkContainer;","import React, { Component } from 'react';\r\nimport LinkContainer from './LinkContainer';\r\n\r\nexport default class Contact extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contact\">\r\n              <h1>Contact Me Down Below</h1>\r\n              <h2>Phone: (845) 327-9929</h2>\r\n              <h3>Email: christyremigio@yahoo.com</h3>\r\n\r\n              <LinkContainer />\r\n\r\n            <div class=\"copyright-bar\">\r\n             <p>¬© 2020 Christy Remijio. All rights reserved.</p>\r\n            </div>\r\n            <div class=\"bg\"></div>\r\n            <div class=\"bg bg2\"></div>\r\n            <div class=\"bg bg3\"></div>\r\n          </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Projects from './components/Projects';\r\nimport Contact from './components/contact-form/Contact';\r\nimport Navigation from './components/Navigation';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div class=\"navbar\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/about\">About</Link>\r\n          <Link to=\"/projects\">Projects</Link>\r\n          <Link to=\"/contact\">Contact</Link>\r\n          \r\n\r\n        </div>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/projects\" component={Projects} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n          \r\n          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App.js';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n   );\n\n   \nregisterServiceWorker();\n"],"sourceRoot":""}